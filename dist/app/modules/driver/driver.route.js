"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DriverRoutes = void 0;
const express_1 = require("express");
const checkAuth_1 = require("../../middlewares/checkAuth");
const validateRequest_1 = require("../../middlewares/validateRequest");
const user_interface_1 = require("../user/user.interface");
const driver_controller_1 = require("./driver.controller");
const driver_validation_1 = require("./driver.validation");
const router = (0, express_1.Router)();
router.post("/create", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN), (0, validateRequest_1.validateRequest)(driver_validation_1.createDriverSchema), driver_controller_1.DriverController.createDriver);
router.get("/", driver_controller_1.DriverController.getAllDrivers);
router.get("/:driverSlug", driver_controller_1.DriverController.getSingleDriver);
router.patch("/:id", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN), (0, validateRequest_1.validateRequest)(driver_validation_1.updateDriverSchema), driver_controller_1.DriverController.updateDriver);
router.delete("/:id", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN), driver_controller_1.DriverController.deleteDriver);
router.post("/:riderSlug/accept-ride", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN, user_interface_1.Role.DRIVER), (0, validateRequest_1.validateRequest)(driver_validation_1.acceptRideRequestSchema), driver_controller_1.DriverController.acceptRideRequest);
router.patch("/ride-status/:driverSlug", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN, user_interface_1.Role.DRIVER), (0, validateRequest_1.validateRequest)(driver_validation_1.updateRideStatusSchema), driver_controller_1.DriverController.updateRideStatus);
router.get("/:driverSlug/earnings", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN, user_interface_1.Role.DRIVER), driver_controller_1.DriverController.viewEarningsHistory);
router.patch("/:riderSlug/cancel-ride", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN, user_interface_1.Role.DRIVER), driver_controller_1.DriverController.cancelRide);
router.patch("/approve-suspend/:driverSlug", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN), (0, validateRequest_1.validateRequest)(driver_validation_1.approveOrSuspendDriverSchema), driver_controller_1.DriverController.approveOrSuspendDriver);
router.patch("/:driverSlug/set-availability", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN, user_interface_1.Role.DRIVER), (0, validateRequest_1.validateRequest)(driver_validation_1.setAvailabilityStatusSchema), driver_controller_1.DriverController.setAvailabilityStatus);
exports.DriverRoutes = router;
